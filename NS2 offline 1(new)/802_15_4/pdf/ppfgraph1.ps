%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 7876 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  7876 8136 moveto
  7876 8136 lineto
stroke
(Delay x 10) 1190 8396 5 just-string
(-3) 1190 8396 8 just-string
(Num of Pps) 8886 380 5 just-string
(-20.0000) 860 401 5 just-string
(0.0000) 860 731 5 just-string
(20.0000) 860 1061 5 just-string
(40.0000) 860 1391 5 just-string
(60.0000) 860 1721 5 just-string
(80.0000) 860 2050 5 just-string
(100.0000) 860 2380 5 just-string
(120.0000) 860 2710 5 just-string
(140.0000) 860 3040 5 just-string
(160.0000) 860 3369 5 just-string
(180.0000) 860 3699 5 just-string
(200.0000) 860 4029 5 just-string
(220.0000) 860 4359 5 just-string
(240.0000) 860 4689 5 just-string
(260.0000) 860 5018 5 just-string
(280.0000) 860 5348 5 just-string
(300.0000) 860 5678 5 just-string
(320.0000) 860 6008 5 just-string
(340.0000) 860 6337 5 just-string
(360.0000) 860 6667 5 just-string
(380.0000) 860 6997 5 just-string
(400.0000) 860 7327 5 just-string
(420.0000) 860 7657 5 just-string
(440.0000) 860 7986 5 just-string
(0.0000) 1261 90 7 just-string
(100.0000) 2504 90 7 just-string
(200.0000) 3747 90 7 just-string
(300.0000) 4989 90 7 just-string
(400.0000) 6232 90 7 just-string
(500.0000) 7475 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 401 moveto
  7786 401 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  7786 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1061 moveto
  7786 1061 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1391 moveto
  7786 1391 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1721 moveto
  7786 1721 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2050 moveto
  7786 2050 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2380 moveto
  7786 2380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2710 moveto
  7786 2710 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3040 moveto
  7786 3040 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3369 moveto
  7786 3369 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3699 moveto
  7786 3699 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4029 moveto
  7786 4029 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4359 moveto
  7786 4359 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4689 moveto
  7786 4689 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5018 moveto
  7786 5018 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5348 moveto
  7786 5348 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5678 moveto
  7786 5678 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6008 moveto
  7786 6008 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6337 moveto
  7786 6337 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6667 moveto
  7786 6667 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6997 moveto
  7786 6997 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7327 moveto
  7786 7327 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7657 moveto
  7786 7657 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7986 moveto
  7786 7986 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1261 8106 moveto
  1261 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2504 8106 moveto
  2504 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3747 8106 moveto
  3747 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4989 8106 moveto
  4989 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6232 8106 moveto
  6232 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7475 8106 moveto
  7475 380 lineto
stroke
14 setlinewidth
newpath
  1261 731 moveto
  2504 7537 lineto
  3747 7755 lineto
  4989 5471 lineto
  6232 5126 lineto
  7475 6203 lineto
stroke
showpage
% End of xgraph output
