%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 7656 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  7656 8136 moveto
  7656 8136 lineto
stroke
(Energy Consumption x 10) 2620 8396 5 just-string
(6) 2620 8396 8 just-string
(Num of Flows) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
(0.2000) 860 1112 5 just-string
(0.4000) 860 1493 5 just-string
(0.6000) 860 1874 5 just-string
(0.8000) 860 2256 5 just-string
(1.0000) 860 2637 5 just-string
(1.2000) 860 3018 5 just-string
(1.4000) 860 3399 5 just-string
(1.6000) 860 3780 5 just-string
(1.8000) 860 4161 5 just-string
(2.0000) 860 4542 5 just-string
(2.2000) 860 4923 5 just-string
(2.4000) 860 5304 5 just-string
(2.6000) 860 5685 5 just-string
(2.8000) 860 6066 5 just-string
(3.0000) 860 6448 5 just-string
(3.2000) 860 6829 5 just-string
(3.4000) 860 7210 5 just-string
(3.6000) 860 7591 5 just-string
(3.8000) 860 7972 5 just-string
(0.0000) 1251 90 7 just-string
(10.0000) 2454 90 7 just-string
(20.0000) 3657 90 7 just-string
(30.0000) 4859 90 7 just-string
(40.0000) 6062 90 7 just-string
(50.0000) 7265 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  7566 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1112 moveto
  7566 1112 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1493 moveto
  7566 1493 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1874 moveto
  7566 1874 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2256 moveto
  7566 2256 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2637 moveto
  7566 2637 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3018 moveto
  7566 3018 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3399 moveto
  7566 3399 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3780 moveto
  7566 3780 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4161 moveto
  7566 4161 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4542 moveto
  7566 4542 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4923 moveto
  7566 4923 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5304 moveto
  7566 5304 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5685 moveto
  7566 5685 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6066 moveto
  7566 6066 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6448 moveto
  7566 6448 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6829 moveto
  7566 6829 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7210 moveto
  7566 7210 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7591 moveto
  7566 7591 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7972 moveto
  7566 7972 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1251 8106 moveto
  1251 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2454 8106 moveto
  2454 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3657 8106 moveto
  3657 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4859 8106 moveto
  4859 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6062 8106 moveto
  6062 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7265 8106 moveto
  7265 380 lineto
stroke
14 setlinewidth
newpath
  1251 731 moveto
  2454 847 lineto
  3657 787 lineto
  4859 4018 lineto
  6062 756 lineto
  7265 7755 lineto
stroke
showpage
% End of xgraph output
